variables:
  -group: KeyVault
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.x'
  IMAGE_TAG: test

trigger:
  branches:
    include:
      - dev

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build Stage'

  
  jobs:
  # - job: InstallDependencies
  #   displayName: 'Install Dependencies'
  #   steps:
    
  #   - task: UsePythonVersion@0
  #     inputs:
  #       versionSpec: '$(pythonVersion)'
  #       addToPath: true
  #   - script: |
  #       python3 -m pip install --upgrade pip
  #       python3 -m pip install -r requirements.txt
  #     displayName: 'Install dependencies'
    

  #   - script: |
  #       python3 -m pip list
  #     displayName: 'List installed packages'

  # - job: RunPylint
  #   displayName: 'Run Pylint'
  #   steps:
  #     - script: |
  #         python3 -m venv test
  #         . test/bin/activate &&
  #         python3 -m pip install -r requirements.txt &&
  #         python3 -m pylint *.py
  #         exit
  #       displayName: 'Activate virtual environment and run pylint'


  # - job: UnitTesting
  #   displayName: 'Run Unit Tests'
  #   steps:
  #   - task: AzureKeyVault@2
  #     inputs:
  #       azureSubscription: 'elasticConnection'
  #       KeyVaultName: 'kv-elastic-alp-uks'
  #       SecretsFilter: '*'
  #       RunAsPreJob: true

  #   - script: |
  #         python3 -m venv test
  #         . test/bin/activate &&
  #         python3 -m pip install -r requirements.txt &&
  #         echo "Key Vault secret is:" $(DB-URI)
          
  #         python3 -m pytest *.py
  #         exit
  #     displayName: 'Run Pytest'
  #     env:
  #        DB_URL: $(DBURL)
   

  - job: PackageDockerImage
    displayName: 'Package Docker Image'
    steps:
    
    - task: Docker@2
      inputs:
          containerRegistry: 'dockerConnection'
          repository: 'alexplayer15/elastic-app'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            $(IMAGE_TAG)
     
      # - task: Docker@2
      #   inputs:
      #     containerRegistry: 'registryConnection'
      #     repository: 'elastic-app-repo'
      #     command: 'buildAndPush'
      #     Dockerfile: '**/Dockerfile'
      #     tags: |
      #         $(IMAGE_TAG)



              

